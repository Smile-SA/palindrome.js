import { logicBoolean } from '../src/data_structures_examples/logic_Boolean';
import { logicTernary } from '../src/data_structures_examples/logic_Ternary';
import { logicFourValued } from '../src/data_structures_examples/logic_FourValued';
import { logicFiveThreeTwo } from '../src/data_structures_examples/logic_FiveThreeTwo';
import {defaultControl} from '../controls/default_controls';
import {createPalindrome} from '../controls/createPalindrome';

export default {
    title: 'Use Cases/Palindrome/Multi-values logic example',
    argTypes: defaultControl(),
};

export const Boolean = createPalindrome.bind({});
Boolean.args = {
    TextStyle:1,
    displayUnits: true,
    textSize: 14,
    mockupData: true,
    displayArea: 'palindrome',
    palindromeSize: 3,
    displaySides: true,
    displayMode: 'dynamic',
    displayLayers: true,
    layerDisplayMode: 'dynamic',
    displayLabels: true,
    displayLabelsAll: false,
    displayGrid: true,
    gridSize: 100,
    gridDivisions: 100,
    metricMagnifier: 10,
    layerStatusControl: true,
    layerMidColor: '#DFDF0B',
    mainAppColor: '#00FF06',
    subAppColor: '#9FC5E8',
    statusRangelow: 0,
    statusRangemed: 30,
    statusRangehigh: 60,
    statusColorlow: '#9FC5E8',
    statusColormed:  '#00FF00',
    statusColorhigh: '#FF0000',
    lineColor: '#000000',
    lineOpacity: 1,
    lineWidth: 3,
    zplaneInitial: 0,
    zplaneHeight: 40,
    zplaneMultilayer: -20,
    data: logicBoolean(),
};

export const Ternary = createPalindrome.bind({});
Ternary.args = {
    TextStyle:1,
    displayUnits: true,
    textSize: 14,
    mockupData: true,
    displayArea: 'palindrome',
    palindromeSize: 3,
    displaySides: true,
    displayMode: 'dynamic',
    displayLayers: true,
    layerDisplayMode: 'dynamic',
    displayLabels: true,
    displayLabelsAll: false,
    displayGrid: true,
    gridSize: 100,
    gridDivisions: 100,
    metricMagnifier: 10,
    layerStatusControl: true,
    layerMidColor: '#DFDF0B',
    mainAppColor: '#00FF06',
    subAppColor: '#9FC5E8',
    statusRangelow: 0,
    statusRangemed: 30,
    statusRangehigh: 60,
    statusColorlow: '#9FC5E8',
    statusColormed:  '#00FF00',
    statusColorhigh: '#FF0000',
    lineColor: '#000000',
    lineOpacity: 1,
    lineWidth: 3,
    zplaneInitial: 0,
    zplaneHeight: 40,
    zplaneMultilayer: -20,
    data: logicTernary(),
};

export const FourValued = createPalindrome.bind({});
FourValued.args = {
    TextStyle:1,
    displayUnits: true,
    textSize: 14,
    mockupData: true,
    displayArea: 'palindrome',
    palindromeSize: 3,
    displaySides: true,
    displayMode: 'dynamic',
    displayLayers: true,
    layerDisplayMode: 'dynamic',
    displayLabels: true,
    displayLabelsAll: false,
    displayGrid: true,
    gridSize: 100,
    gridDivisions: 100,
    metricMagnifier: 10,
    layerStatusControl: true,
    layerMidColor: '#FF2C00',
    mainAppColor: '#FFCC00',
    subAppColor: '#FFFFFF',
    statusRangelow: 0,
    statusRangemed: 30,
    statusRangehigh: 60,
    statusColorlow: '#9FC5E8',
    statusColormed:  '#00FF00',
    statusColorhigh: '#FF0000',
    lineColor: '#000000',
    lineOpacity: 1,
    lineWidth: 3,
    zplaneInitial: 0,
    zplaneHeight: 40,
    zplaneMultilayer: -20,
    data: logicFourValued(),
};

export const FiveThreeTwoPyramid = createPalindrome.bind({});
FiveThreeTwoPyramid.args = {
    TextStyle:1,
    displayUnits: true,
    textSize: 14,
    mockupData: true,
    displayArea: 'palindrome',
    palindromeSize: 3,
    displaySides: true,
    displayMode: 'dynamic',
    displayLayers: true,
    layerDisplayMode: 'dynamic',
    displayLabels: true,
    displayLabelsAll: false,
    displayGrid: true,
    gridSize: 100,
    gridDivisions: 100,
    metricMagnifier: 10,
    layerStatusControl: true,
    layerMidColor: '#FF2C00',
    mainAppColor: '#FFCC00',
    subAppColor: '#FFFFFF',
    statusRangelow: 0,
    statusRangemed: 30,
    statusRangehigh: 60,
    statusColorlow: '#9FC5E8',
    statusColormed:  '#00FF00',
    statusColorhigh: '#FF0000',
    lineColor: '#000000',
    lineOpacity: 1,
    lineWidth: 3,
    zplaneInitial: 0,
    zplaneHeight: 40,
    zplaneMultilayer: -20,
    data: logicFiveThreeTwo(),
};